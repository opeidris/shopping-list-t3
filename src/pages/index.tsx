import { ShoppingItem } from "@prisma/client"
import type { NextPage } from "next";
import Head from "next/head";
import { useEffect, useState } from "react"
import ItemModal from "../components/ItemModal"
import { trpc } from "../utils/trpc";
import {HiX} from 'react-icons/hi'
import { motion } from 'framer-motion'
import { itemRouter } from "../server/trpc/router/itemRouter"

const Home: NextPage = () => {
  const [items, setItems] = useState<ShoppingItem[]>([])
  const [checkedItems, setCheckedItems] = useState<ShoppingItem[]>([])
  const [modalOpen, setModalOpen] = useState<boolean>(false)
  
  const { data: itemsData, isLoading } = trpc.item.getallItems.useQuery(undefined, {onSuccess: (shoppingItem)=> {
    setItems(shoppingItem)
    const checked = shoppingItem.filter((item) => item.checked)
    setCheckedItems(checked)
  }})

  const {mutate: deleteItem} = trpc.item.deleteItems.useMutation({onSuccess(shoppingItem) {
    setItems((prev) => prev.filter((item) => item.id !== shoppingItem.id))
  }})

  const { mutate: checkItem} = trpc.item.checkItem.useMutation({onSuccess:
  (shoppingItem) => {
    if (checkedItems.some((item) =>  item.id === shoppingItem.id)){
      setCheckedItems((prev) => prev.filter((item) => item.id !== shoppingItem.id))
    } else {
      setCheckedItems((prev) => [...prev, shoppingItem])
    }
  }})

  if(!itemsData || isLoading ) return <p>Loading..</p>

  return (
    <>
      <Head>
        <title>Shopping List</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      {modalOpen && <ItemModal setModalOpen={setModalOpen} setItems={setItems} />}

      <main className=" mx-auto my-12 max-w-3xl">
        <div className=" flex justify-between">
          <h2 className="text-2xl font-semibold">My Shopping List</h2>
          <button
            type="button"
            onClick={() => setModalOpen(true)}
            className=" px-2 py-3 bg-violet-500 text-sm text-white font-semibold  rounded-sm transition hover:bg-violet-400">Add Shopping Item</button>
        </div>

        <ul className=" mt-4">
          { items.map((item) => {
            const {id, name} = item
            return (

              <li key={id} className=" flex justify-between items-center">
                <div className="relative">
                  <div className="pointer-events-none absolute inset-0 flex origin-left items-center justify-center">
                    <motion.div 
                      initial={{width: 0}}
                      animate={{ width: checkedItems.some((ite) => item.id === id) ? "100%" : 0}}
                      transition={{duration: 0.2, ease: 'easeInOut'}}
                      className='h-[2px] w-full translate-y-px bg-red-500'
                    />
                  </div>
                  <span 
                    className=" cursor-pointer"
                    onClick={() => {
                      checkItem({
                        id,
                        checked: checkedItems.some((item) => item.id === id) ? false : true
                      })
                    }}
                  >
                    {name}
                  </span>
                </div>
                <HiX 
                  onClick={() => {deleteItem({id})}}
                  className=" text-lg text-red-500 cursor-pointer"
                />
              </li>
            )
            })}
        </ul>
        
      </main>

    </>
  );
};

export default Home;

